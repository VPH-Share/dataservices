<?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>at.ac.univie.isc</groupId>
    <artifactId>asio-parent</artifactId>
    <version>0.5.0-SNAPSHOT</version>
    <relativePath>../parent/pom.xml</relativePath>
  </parent>

  <artifactId>asio-core</artifactId>
  <name>asio core</name>
  <description>HTTP endpoint for querying dataset services</description>
  <packaging>war</packaging>

  <properties>
    <!-- properties for filtered sites - dot notation not allowed -->
    <site-version>${project.version}</site-version>
  </properties>

  <dependencies>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>asio-base</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>asio-d2rq</artifactId>
      <version>${project.version}</version>
    </dependency>
    <!-- API and commons -->
    <dependency>
      <groupId>javax.annotation</groupId>
      <artifactId>javax.annotation-api</artifactId>
    </dependency>
    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
    </dependency>
    <dependency>
      <groupId>com.google.code.findbugs</groupId>
      <artifactId>jsr305</artifactId>
    </dependency>
    <dependency>
      <groupId>com.netflix.rxjava</groupId>
      <artifactId>rxjava-core</artifactId>
    </dependency>
    <dependency>
      <groupId>javax.ws.rs</groupId>
      <artifactId>javax.ws.rs-api</artifactId>
    </dependency>
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>javax.servlet-api</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>javax.json</groupId>
      <artifactId>javax.json-api</artifactId>
    </dependency>
    <dependency>  <!-- json impl -->
      <groupId>org.glassfish</groupId>
      <artifactId>javax.json</artifactId>
      <version>1.0.4</version>
      <scope>runtime</scope>
    </dependency>
    <!-- logging -->
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-api</artifactId>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-core</artifactId>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-web</artifactId>
      <scope>runtime</scope>
    </dependency>
    <dependency>  <!-- bridge to slf4j -->
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-slf4j-impl</artifactId>
      <scope>runtime</scope>
    </dependency>
    <dependency> <!-- log4j adapter for jena/d2r -->
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-1.2-api</artifactId>
      <scope>runtime</scope>
    </dependency>
    <!-- test -->
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>asio-test</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.hamcrest</groupId>
      <artifactId>hamcrest-core</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.hamcrest</groupId>
      <artifactId>hamcrest-library</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.jayway.awaitility</groupId>
      <artifactId>awaitility</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpcore</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpclient</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.dbunit</groupId>
      <artifactId>dbunit</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>net.sf.opencsv</groupId>
      <artifactId>opencsv</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>  <!-- SQL engine -->
      <groupId>org.jooq</groupId>
      <artifactId>jooq</artifactId>
      <version>3.4.1</version>
    </dependency>
    <dependency>
      <groupId>com.zaxxer</groupId>
      <artifactId>HikariCP-java6</artifactId>
      <version>2.0.1</version>
      <scope>compile</scope>
    </dependency>
    <dependency>  <!-- SPARQL engine -->
      <groupId>org.apache.jena</groupId>
      <artifactId>jena-core</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.jena</groupId>
      <artifactId>jena-arq</artifactId>
    </dependency>
    <dependency>  <!-- required for xerces impl in jena, but asio only requires JDK built-in api -->
      <groupId>xml-apis</groupId>
      <artifactId>xml-apis</artifactId>
      <version>1.4.01</version>
      <scope>runtime</scope>
    </dependency>
    <dependency>  <!-- JDBC drivers -->
      <groupId>mysql</groupId>
      <artifactId>mysql-connector-java</artifactId>
      <version>5.1.26</version>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>com.h2database</groupId>
      <artifactId>h2</artifactId>
      <version>1.3.171</version>
      <scope>runtime</scope>
    </dependency>
    <dependency>  <!-- backend CXF framework -->
      <groupId>org.apache.cxf</groupId>
      <artifactId>cxf-core</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.cxf</groupId>
      <artifactId>cxf-rt-frontend-jaxrs</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.cxf</groupId>
      <artifactId>cxf-rt-rs-client</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.cxf</groupId>
      <artifactId>cxf-rt-rs-extension-providers</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.cxf</groupId>
      <artifactId>cxf-rt-transports-http</artifactId>
    </dependency>
    <dependency> <!-- required by JSON provider -->
      <groupId>asm</groupId>
      <artifactId>asm</artifactId>
      <version>3.3.1</version>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>org.codehaus.jettison</groupId>
      <artifactId>jettison</artifactId>
      <version>1.3.5</version>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.cxf</groupId>
      <artifactId>cxf-rt-transports-http-jetty</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.cxf</groupId>
      <artifactId>cxf-rt-transports-local</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>  <!-- spring components required by cxf -->
      <groupId>org.springframework</groupId>
      <artifactId>spring-core</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-context</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-beans</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-web</artifactId>
    </dependency>
    <dependency> <!-- memory leak prevention -->
      <groupId>se.jiderhamn</groupId>
      <artifactId>classloader-leak-prevention</artifactId>
    </dependency>
    <!-- embedded tomcat -->
    <dependency>
      <groupId>org.apache.tomcat.embed</groupId>
      <artifactId>tomcat-embed-core</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.tomcat.embed</groupId>
      <artifactId>tomcat-embed-logging-juli</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <finalName>asio-${project.version}</finalName>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-war-plugin</artifactId>
        <executions>
          <execution>
            <id>war-exploded</id>
            <phase>package</phase>
            <goals>
              <goal>exploded</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <!-- testing -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <excludedGroups>at.ac.univie.isc.asio.FunctionalTest</excludedGroups>
          <classpathDependencyExcludes> <!-- mysql starts a clean up thread, disable in unit tests -->
            <classpathDependencyExclude>mysql:mysql-connector-java</classpathDependencyExclude>
          </classpathDependencyExcludes>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <configuration>
          <failIfNoTests>true</failIfNoTests>
          <includes>
            <include>**/*.java</include>
          </includes>
          <groups>at.ac.univie.isc.asio.FunctionalTest</groups>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <!-- integration test environment -->
      <plugin>
        <groupId>com.btmatthews.maven.plugins.inmemdb</groupId>
        <artifactId>inmemdb-maven-plugin</artifactId>
        <configuration>
          <monitorKey>inmemdb</monitorKey>
          <monitorPort>11527</monitorPort>
          <daemon>true</daemon>
          <type>h2</type>
          <database>test</database>
          <username>root</username>
          <password>change</password>
          <sources>
            <script>
              <!--suppress CheckValidXmlInScriptTagBody -->
              <sourceFile>${basedir}/src/test/resources/database/create_db.sql</sourceFile>
            </script>
            <script>
              <!--suppress CheckValidXmlInScriptTagBody -->
              <sourceFile>${basedir}/src/test/resources/database/fill_person.sql</sourceFile>
            </script>
            <script>
              <!--suppress CheckValidXmlInScriptTagBody -->
              <sourceFile>${basedir}/src/test/resources/database/fill_datetimes.sql</sourceFile>
            </script>
            <script>
              <!--suppress CheckValidXmlInScriptTagBody -->
              <sourceFile>${basedir}/src/test/resources/database/fill_dummy.sql</sourceFile>
            </script>
            <script>
              <!--suppress CheckValidXmlInScriptTagBody -->
              <sourceFile>${basedir}/src/test/resources/database/fill_urls.sql</sourceFile>
            </script>
          </sources>
        </configuration>
        <executions>
          <execution>
            <id>start-db</id>
            <phase>pre-integration-test</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <daemon>true</daemon>
            </configuration>
          </execution>
          <execution>
            <id>stop-db</id>
            <phase>post-integration-test</phase>
            <goals>
              <goal>stop</goal>
            </goals>
          </execution>
        </executions>
        <dependencies>
          <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <version>1.3.171</version>
          </dependency>
        </dependencies>
      </plugin>
      <!-- embedded jetty -->
      <plugin>
        <groupId>org.eclipse.jetty</groupId>
        <artifactId>jetty-maven-plugin</artifactId>
        <configuration>
          <stopKey>jetty</stopKey>
          <stopPort>19080</stopPort>
          <stopWait>20</stopWait>
          <scanIntervalSeconds>0</scanIntervalSeconds>
          <reload>manual</reload>
          <useTestScope>true</useTestScope>
          <jettyXml>
            ${project.basedir}/src/test/etc/jetty.xml,${project.basedir}/src/test/etc/jetty-ssl.xml,${project.basedir}/src/test/etc/jetty-https.xml
          </jettyXml>
          <systemProperties>
            <systemProperty>  <!-- to let jetty resolve file references in a reactor build -->
              <name>jetty.base</name>
              <value>${project.basedir}</value>
            </systemProperty>
          </systemProperties>
          <webApp>
            <contextPath>/asio</contextPath>
          </webApp>
        </configuration>
        <executions>
          <execution>
            <id>start-jetty</id>
            <phase>pre-integration-test</phase>
            <goals>
              <goal>stop</goal>
              <!-- close running instance -->
              <goal>start</goal>
            </goals>
            <configuration>
              <daemon>true</daemon>
              <stopKey>jetty</stopKey>
              <stopPort>19080</stopPort>
            </configuration>
          </execution>
          <execution>
            <id>stop-jetty</id>
            <phase>post-integration-test</phase>
            <goals>
              <goal>stop</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <!-- misc -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-site-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>license-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>collect-third-party-licenses</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>add-third-party</goal>
            </goals>
            <configuration>
              <thirdPartyFilename>THIRD-PARTY</thirdPartyFilename>
              <fileTemplate>/org/codehaus/mojo/license/third-party-file-groupByLicense.ftl</fileTemplate>
              <useMissingFile>true</useMissingFile>
              <excludedScopes>test</excludedScopes>
              <licenseMerges>
                <licenseMerge>The Apache Software License, Version 2.0|Apache License, Version 2.0|Apache License|Apache License 2.0|Apache 2|ASF 2.0</licenseMerge>
                <licenseMerge>BSD|BSD-Style License|The BSD License</licenseMerge>
                <licenseMerge>CDDL 1.1|CDDL + GPLv2 with classpath exception|Dual license consisting of the CDDL v1.1 and GPL v2|GPL2 w/ CPE</licenseMerge>
                <licenseMerge>Public Domain|The SAX License</licenseMerge>
              </licenseMerges>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>attach-thirdparty-licenses</id>
            <phase>package</phase>
            <goals>
              <goal>attach-artifact</goal>
            </goals>
            <configuration>
              <artifacts>
                <artifact>
                  <file>${project.build.directory}/generated-sources/license/THIRD-PARTY</file>
                  <type>txt</type>
                  <classifier>thirdparty-licenses</classifier>
                </artifact>
              </artifacts>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <reporting>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-project-info-reports-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-changelog-plugin</artifactId>
      </plugin>
    </plugins>
  </reporting>
</project>
