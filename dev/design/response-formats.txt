# response formats

## sql operation <application/sql-results+json>

### query

{
  "head" : {
    "statement" : "@@sql_query@@",
    "columns" : [
      { "name" : "@@column_name@@", "type" : "@@xsd_datatype@@" },
      { .. },
    ],
  },
  "rows" : [
    [ "@@column_value@@", .. ],
    [..],
  ]
}

### update

{
  "head" : {
    "statement" : "@@SQL_QUERY@@",
  },
  "update" : {
    "affected" : @@row_count@@,
  }
}

## sql schema <application/sql-schema+json>

{
  "catalog" : "@@service_url@@",
  "schema" : "@@schema_name@@",
  "tables" : [
    {
      "name" : "@@table_name@@",
      "columns" : [
        "name" : "@@column_name@@",
        "type" : "@@xsd_type@@",
        "sql-type" : "@@sql_type@@",
        "nullable" : @@column_is_nullable@@,
        "length" : @@column_length@@,
      ]
    }
  ]
}

sparql-results+xml

<sparql xmlns="http://www.w3.org/2005/sparql-results#">
  <head />
  <results /> || <boolean />
</sparql>

// SQL SELECT responses

application/sql-results+xml

<sql xmlns="http://isc.univie.ac.at/2013/asio">
  <head statement="SQL_QUERY">
    <column name="NAME" type="XSD:TYPE" />
    ...
  </head>
  <rows>
    <row>
      <cell>VALUE</cell>
      ...
    </row>
    ...
  </rows>
</sql>

// SQL UPDATE responses

application/sql-results+xml

<sql xmlns="http://isc.univie.ac.at/2013/asio">
  <head statement="SQL_UPDATE" />
  <update affected="ROW_COUNT" />
</sql>

text/csv -> update

statement,affected
"SQL_UPDATE",ROW_COUNT

// SQL SCHEMA responses

application/sql-schema+xml

<schema /* global properties e.g. service url / name / idk ? */>
  <table name="TABLE_NAME" schema="SCHEMA_NAME" catalog="CATALOG_NAME">
    <column name="NAME" type="XSD:TYPE" sqlType="SQL:TYPE" length="" nullable="" default="" />
    ...
  </table>
  ...
</schema>
